OBJETIVOS A SE FAZER
PRINCIPAL:
[  ] Otimizar o uso do Selenium. Está muito vulnerável a erros.
    Ao ser testado em outra maquina, o app não funcionou. Provavelmente tem algo a ver com o ChromeDriver.
    [  ] Melhorar sistema de logging.
[  ] Trazer no relatório final todos os dados importantes para que o usuário possa verificar se o registro está correto,
    evitando assim a necessidade do usuário ter que abrir os pdfs.

SECUNDÁRIOS:
[  ] Melhorar sistema de checkpoint.
[  ] Adicionar uma maneira de atualizar automaticamente as planilhas da Anvisa.
    [  ] A planilha 'TA_PRECO_MEDICAMENTO_GOV' pode variar o número de linhas, o que alteraria o skiprows. Pensar em como lidar com isso.
[  ] Criar uma maneira de verificar se encontrou corretamente a página da Anvisa, caso contrário, acusar que talvez o site da Anvisa esteja
fora do ar.
[  ] Elaborar um documento descrevendo o que cada função faz, para melhor entendimento. Comecei usando docstring, mas deve ter uma maneira
melhor de fazer isso.
    [Ok] Adicionado docstring em todas classes e seus métodos.
[  ] Padronizar nomes e adicionar validação dos argumentos.
[  ] Otimizar o filtro da descrição, tanto no momento de obter a melhor descrição, quanto no momento de buscar o registro na planilha da anvisa.
[  ] Pensar em um lugar melhor para armazenar os registros obtidos.
[  ] Pensar em uma forma de buscar outros produtos além dos medicamentos. Quando é fornecido uma descrição de um item que não seja medicamento
o programa não lida muito bem, ele continua agindo normalmente e tenta obter o registro, mas no fim, só perde tempo.
[  ] Verificar utilização desnecessária do método get_register da classe OpenDataAnvisa.
    Percebi que mesmo quando a API falha em extrair as substâncias da descrição, ela ainda tenta utilizar o método get_register de OpenDataAnvisa,
    mas isso é inútil, pois não tem como obter o registro se não tiver as substâncias corretamente extraidas.

OBJETIVOS CONCLUÍDOS:
[Ok] Melhorar a interface.
[Ok] Criar um executável/instalador.
    [Ok] Estudar como fazer isso.
[Ok] Criar uma interface.
    [Ok] Melhorar a estrutura do projeto atual antes ?
    [Ok] Estudar a melhor maneira de criar uma interface.
[Ok] Refatorar projeto. --Do melhor jeito que consegui, por enquanto.
    [Ok] Criar um módulo que recebe o input inicial. Sua responsabilidade será validar o input, processar(se for o caso) e retornar os dados para que
    o próximo módulo possa usar.
    [Ok] Refatorar o módulo que lida com o processamento do input inicial.
    [Ok] Criar uma abstração para ser possível a estensão no futuro para produtos além de medicamentos.
        Criado a classe abstrata Product e a classe Medicine que herda de Product. Os códigos foram adaptados para rodar utilizando a classe Medicine,
        ao invés das coleções que estavam sendo utilizadas, mas ainda não é possivel estendar para uma segunda classe do tipo Product.
        Se for utilizado uma outra classe derivada de Product que não seja Medicine, irá quebrar.
        Isso será resolvido no momento da implementação da nova classe.
    [Ok] Refatorar o módulo que lida com a obtenção dos registros.
    [  ] Refatorar o módulo que lida com a obtenção dos pdfs e gera o relatório.
[Ok] Melhorar informações do relatório.
[Ok] Arrumar uma maneira de verificar se a concentração/apresentação está correta.
    [Ok] Elaborar uma maneira de extrair informações sobre a concentração e a apresentação das descrições dos medicamentos.
    [Ok] Elaborar uma verificação que utiliza a concentração e/ou a apresentação obtida, a fim de validar o registro encontrado.
    Para dar certo essa validação da concentração/apresentação, será necessário obter uma lista de registros candidatos, pois, caso o registro
    não passe pela validação, será necessário procurar novamente outro registro, porém refazer todo o processo me parece muito custoso. Para
    solucionar isso, estou pensando em separar as funções de encontrar registros e validação dos registros. E ainda, estou pensando em armazenar
    informações relevantes dos registros encontrados na primeira vez, em formato JSON, para facilitar nas buscas futuras.
[Ok] Aumentar a precisão das buscas realizadas usando os dados abertos da anvisa, para não depender do smerp.
[Ok] Corrigir filtro de descrição no momento de buscar os registros na planilha da anvisa. Removi as preposições, mas ainda há muito a ser
    melhorado.
[Ok] Aumentar a precisão no momento de filtrar as informações da tabela CMED, não está 100% correto.
    Ex: Ao tentar encontrar soro glicofisiológico, foi encontrado soro fisiologico.
    Possível solução1: No momento da busca da descrição mais adequada. Adicionar um sistema de pontuação.
    A descrição com a maior pontuação será a candidata mais ideal/correta.
    Falha da solução1: Como diferenciar um ringer simples de um ringer com lactato?
    Possível solução2: Mesmo com a falha da solução1, é possível criar um sistema de pontuação para melhorar
    significativamente a precisão no momento de filtrar a descrição.
    Possível solução3: Aceitar que não é possível encontrar registros para todas situações. No momento
    que falhar alguma busca, deixar claro no relatório.
    Solução aplicada: Criado uma lista de substâncias. Primeiro verifica se alguma substância consta dentro da descrição. Se não obter sucesso
    assim, separa cada palavra das substâncias e verifica uma a uma se consta dentro da descrição, removendo palavras que contém menos de 4
    letras e também removendo preposições. Se mesmo assim não encontrar, ele retorna a descrição original.
[Ok] Elaborar uma maneira mais precisa de obter a descrição correta.
[Ok] Armazenar os registros em PDF e adicionar alguma forma do programa saber se ele está desatualizado.
    Atualizar automaticamente caso esteja desatualizado. Fazendo isso, não será necessário buscar um 
    novo registro toda vez que executar o programa, apenas buscar no banco de dados.
    Concluindo essa otimização, acredito que ficará muito mais rápido obter os registros. Assim, será
    possível realizar testes em uma quantidade muito maior de dados.
[Ok] Adicionar verificação se o registro encontrado está vencido, nas buscas usando smerp.
[Ok] Usar a nomeação bem sucedida do print obtido como parâmetro para saber se o registro
    foi obtido com sucesso.
[Ok] Implementar a nomeação correta do print obtido.
[Ok] Pensar em uma forma de lidar com situações onde a marca consta com seu nome abreviado.
[Ok] Adaptar a busca pelo registro usando os dados aberto da própria anvisa.
    link: https://dados.anvisa.gov.br/dados/

ESTUDAR ESSA POSSIBILIDADE:
[  ] Melhorar o filtro de descrição: Primeiro, criar uma lista de substâncias únicas, porém não
    necessáriamente deverá conter o nome completo da substância, mas sim pegar todas palavras que podem fazer
    parte do nome de uma substância, sem considerar preposições. Segundo, pegar a descrição original e tentar
    limpar o máximo de conteúdo desncesseário dela, formando um array apenas com palavras candidatas a substância.
    Terceiro, pegar cada palavra do array criado e verificar a semelhança com as lista única de substâncias,
    quando obter um match, adicionar na descrição filtrada. Esse método me parece promissor, é preciso testar.
    Talvez dê para extrair também a dosagem/fórmula da substância.

Parece que se rodar o programa enquanto o PC é utilizado, ele aumenta a probabilidade de erros.
Será que existe alguma forma de solucionar isso? Isso acontece apenas com o Selenium.

Após a otimização e testes em larga escala, eu deveria começar a pensar em uma interface?
Antes da interface, eu preciso dar um jeito de aumentar a precisão dos registros encontrados, para isso
preciso encontrar uma solução para encontrar a fórmula farmaceutica correta.

Vale a pena separar as etapas: busca do registro e salvar como PDF?